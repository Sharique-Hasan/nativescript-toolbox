"use strict";
var observable_1 = require("data/observable");
var Toolbox = require('nativescript-toolbox');
function getMessage(counter) {
    if (counter <= 0) {
        return "Hoorraaay! You unlocked the NativeScript clicker achievement!";
    }
    else {
        return counter + " taps left";
    }
}
function createViewModel() {
    var viewModel = new observable_1.Observable();
    viewModel.counter = 42;
    viewModel.message = getMessage(viewModel.counter);
    viewModel.onTap = function () {
        this.counter--;
        this.set("message", getMessage(this.counter));
        // isDebug seems to be broken, commenting it out 
        // console.log('isDebug(): ' + Toolbox.isDebug());
    };
    viewModel.onOpenWifiTap = function () {
        console.log('openWifiSettings: ' + Toolbox.openWifiSettings());
    };
    return viewModel;
}
exports.createViewModel = createViewModel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi12aWV3LW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi12aWV3LW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSwyQkFBMkIsaUJBQWlCLENBQUMsQ0FBQTtBQUM3QyxJQUFZLE9BQU8sV0FBTSxzQkFBc0IsQ0FBQyxDQUFBO0FBSWhELG9CQUFvQixPQUFPO0lBQ3ZCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2YsTUFBTSxDQUFDLCtEQUErRCxDQUFDO0lBQzNFLENBQUM7SUFBQyxJQUFJLENBQUMsQ0FBQztRQUNKLE1BQU0sQ0FBQyxPQUFPLEdBQUcsWUFBWSxDQUFDO0lBQ2xDLENBQUM7QUFDTCxDQUFDO0FBRUQ7SUFDSSxJQUFJLFNBQVMsR0FBUSxJQUFJLHVCQUFVLEVBQUUsQ0FBQztJQUN0QyxTQUFTLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztJQUN2QixTQUFTLENBQUMsT0FBTyxHQUFHLFVBQVUsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFbEQsU0FBUyxDQUFDLEtBQUssR0FBRztRQUNkLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUU5QyxpREFBaUQ7UUFDakQsa0RBQWtEO0lBQ3RELENBQUMsQ0FBQTtJQUVELFNBQVMsQ0FBQyxhQUFhLEdBQUc7UUFDdEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO0lBQ25FLENBQUMsQ0FBQTtJQUVELE1BQU0sQ0FBQyxTQUFTLENBQUM7QUFDckIsQ0FBQztBQUVELE9BQU8sQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJkYXRhL29ic2VydmFibGVcIjtcbmltcG9ydCAqIGFzIFRvb2xib3ggZnJvbSAnbmF0aXZlc2NyaXB0LXRvb2xib3gnO1xuaW1wb3J0ICogYXMgTW9tZW50IGZyb20gJ25hdGl2ZXNjcmlwdC10b29sYm94L21vbWVudCc7XG5cblxuZnVuY3Rpb24gZ2V0TWVzc2FnZShjb3VudGVyKSB7XG4gICAgaWYgKGNvdW50ZXIgPD0gMCkge1xuICAgICAgICByZXR1cm4gXCJIb29ycmFhYXkhIFlvdSB1bmxvY2tlZCB0aGUgTmF0aXZlU2NyaXB0IGNsaWNrZXIgYWNoaWV2ZW1lbnQhXCI7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNvdW50ZXIgKyBcIiB0YXBzIGxlZnRcIjtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVZpZXdNb2RlbCgpIHtcbiAgICB2YXIgdmlld01vZGVsOiBhbnkgPSBuZXcgT2JzZXJ2YWJsZSgpO1xuICAgIHZpZXdNb2RlbC5jb3VudGVyID0gNDI7XG4gICAgdmlld01vZGVsLm1lc3NhZ2UgPSBnZXRNZXNzYWdlKHZpZXdNb2RlbC5jb3VudGVyKTtcblxuICAgIHZpZXdNb2RlbC5vblRhcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5jb3VudGVyLS07XG4gICAgICAgIHRoaXMuc2V0KFwibWVzc2FnZVwiLCBnZXRNZXNzYWdlKHRoaXMuY291bnRlcikpO1xuXG4gICAgICAgIC8vIGlzRGVidWcgc2VlbXMgdG8gYmUgYnJva2VuLCBjb21tZW50aW5nIGl0IG91dCBcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ2lzRGVidWcoKTogJyArIFRvb2xib3guaXNEZWJ1ZygpKTtcbiAgICB9XG5cbiAgICB2aWV3TW9kZWwub25PcGVuV2lmaVRhcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ29wZW5XaWZpU2V0dGluZ3M6ICcgKyBUb29sYm94Lm9wZW5XaWZpU2V0dGluZ3MoKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZpZXdNb2RlbDtcbn1cblxuZXhwb3J0cy5jcmVhdGVWaWV3TW9kZWwgPSBjcmVhdGVWaWV3TW9kZWw7Il19