"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("data/observable");
var Toolbox = require("nativescript-toolbox");
function getMessage(counter) {
    if (counter <= 0) {
        return "Hoorraaay! You unlocked the NativeScript clicker achievement!";
    }
    else {
        return counter + " taps left";
    }
}
function createViewModel() {
    var viewModel = new observable_1.Observable();
    viewModel.counter = 42;
    viewModel.message = getMessage(viewModel.counter);
    viewModel.onTap = function () {
        this.counter--;
        this.set("message", getMessage(this.counter));
        // isDebug seems to be broken, commenting it out 
        // console.log('isDebug(): ' + Toolbox.isDebug());
    };
    viewModel.onOpenWifiTap = function () {
        console.log('openWifiSettings: ' + Toolbox.openWifiSettings());
    };
    return viewModel;
}
exports.createViewModel = createViewModel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi12aWV3LW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi12aWV3LW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsOENBQTZDO0FBQzdDLDhDQUFnRDtBQUloRCxvQkFBb0IsT0FBTztJQUN2QixFQUFFLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNmLE1BQU0sQ0FBQywrREFBK0QsQ0FBQztJQUMzRSxDQUFDO0lBQUMsSUFBSSxDQUFDLENBQUM7UUFDSixNQUFNLENBQUMsT0FBTyxHQUFHLFlBQVksQ0FBQztJQUNsQyxDQUFDO0FBQ0wsQ0FBQztBQUVEO0lBQ0ksSUFBSSxTQUFTLEdBQVEsSUFBSSx1QkFBVSxFQUFFLENBQUM7SUFDdEMsU0FBUyxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7SUFDdkIsU0FBUyxDQUFDLE9BQU8sR0FBRyxVQUFVLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBRWxELFNBQVMsQ0FBQyxLQUFLLEdBQUc7UUFDZCxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDZixJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFFOUMsaURBQWlEO1FBQ2pELGtEQUFrRDtJQUN0RCxDQUFDLENBQUE7SUFFRCxTQUFTLENBQUMsYUFBYSxHQUFHO1FBQ3RCLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixFQUFFLENBQUMsQ0FBQztJQUNuRSxDQUFDLENBQUE7SUFFRCxNQUFNLENBQUMsU0FBUyxDQUFDO0FBQ3JCLENBQUM7QUFFRCxPQUFPLENBQUMsZUFBZSxHQUFHLGVBQWUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwiZGF0YS9vYnNlcnZhYmxlXCI7XG5pbXBvcnQgKiBhcyBUb29sYm94IGZyb20gJ25hdGl2ZXNjcmlwdC10b29sYm94JztcbmltcG9ydCAqIGFzIE1vbWVudCBmcm9tICduYXRpdmVzY3JpcHQtdG9vbGJveC9tb21lbnQnO1xuXG5cbmZ1bmN0aW9uIGdldE1lc3NhZ2UoY291bnRlcikge1xuICAgIGlmIChjb3VudGVyIDw9IDApIHtcbiAgICAgICAgcmV0dXJuIFwiSG9vcnJhYWF5ISBZb3UgdW5sb2NrZWQgdGhlIE5hdGl2ZVNjcmlwdCBjbGlja2VyIGFjaGlldmVtZW50IVwiO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBjb3VudGVyICsgXCIgdGFwcyBsZWZ0XCI7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVWaWV3TW9kZWwoKSB7XG4gICAgdmFyIHZpZXdNb2RlbDogYW55ID0gbmV3IE9ic2VydmFibGUoKTtcbiAgICB2aWV3TW9kZWwuY291bnRlciA9IDQyO1xuICAgIHZpZXdNb2RlbC5tZXNzYWdlID0gZ2V0TWVzc2FnZSh2aWV3TW9kZWwuY291bnRlcik7XG5cbiAgICB2aWV3TW9kZWwub25UYXAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuY291bnRlci0tO1xuICAgICAgICB0aGlzLnNldChcIm1lc3NhZ2VcIiwgZ2V0TWVzc2FnZSh0aGlzLmNvdW50ZXIpKTtcblxuICAgICAgICAvLyBpc0RlYnVnIHNlZW1zIHRvIGJlIGJyb2tlbiwgY29tbWVudGluZyBpdCBvdXQgXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdpc0RlYnVnKCk6ICcgKyBUb29sYm94LmlzRGVidWcoKSk7XG4gICAgfVxuXG4gICAgdmlld01vZGVsLm9uT3BlbldpZmlUYXAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdvcGVuV2lmaVNldHRpbmdzOiAnICsgVG9vbGJveC5vcGVuV2lmaVNldHRpbmdzKCkpO1xuICAgIH1cblxuICAgIHJldHVybiB2aWV3TW9kZWw7XG59XG5cbmV4cG9ydHMuY3JlYXRlVmlld01vZGVsID0gY3JlYXRlVmlld01vZGVsOyJdfQ==